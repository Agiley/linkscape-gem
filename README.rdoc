= Linkscape Gem

This is the official Gem to interact with the SEOmoz API.  For more information, please check out the {API page on SEOmoz}[http://www.seomoz.org/api] and the {SEOmoz API Wiki}[http://apiwiki.seomoz.org].   Note: this gem is currently an alpha release, and is not intended for production use...yet.

== Usage

First you must secure an accessID and secret key from SEOmoz.  See the {API page}[http://www.seomoz.org/api] for details.  Once you have your credentials, create an instance of your client:
  Linkscape.configure do |config|
    config.access_id = "my_access_id"
    config.access_key = "myS3cret"
    config.logger = Rails.logger # Optional
    config.cache = Rails.cache   # Optional. Cache responses between requests for increased efficiency
    config.cache_for = 45.days   # Optional. Specify how long a response should be cached.
  end
  
Then you should be able to make one of the predefined API calls

  response = Linkscape::UrlMetric.find("http://gemcutter.org")
  
At this point <tt>response</tt> should be a Linkscape::UrlMetric object. You can get various pieces of information by calling its instance methods:

  response.is_canonical?
  response.num_nofollow_links_to_page
  response.page_authority

== Available API Calls

Each API is represented by an ActiveResource model:

* Linkscape::Anchor
* Linkscape::Link
* Linkscape::Page
* Linkscape::UrlMetric

=== Resource Methods
All of the normal ActiveResource methods are provided. In addition, each resource has been enhanced with a `paginate` method that should make pagination much easier. For example, since the Linkscape API does not provide a total count of records, if the page request is out of bounds, the paginate method will optionally search backwards for the last page.

=== MozRank

Returns the mozRank of the supplied URI.

  Linkscape::UrlMetric.find(uri).mozrank

=== URL Metrics

Returns metrics about the supplied URI.

  Linkscape::UrlMetric.find(uri)

=== Top Links

Returns a list of topLinks to the supplied URI and :type.

  Link.paginate(1, 25, uri) # page 1, page size of 25

Additional parameters can be passed to the paginate method such as sorts and filters.

=== Top Pages

Returns a list of the top pages on the URI in question

  Linkscape::Page.paginate(1, 25, uri) # page 1, limit 25

=== Anchor Metrics

Returns anchor text metrics about the URI in question

  Linkscape::Anchor(1, 25, uri)

== Requesting Data on Multiple URLs

For the API calls which support it, you may request data on multiple URLs by passing an
array of URLs to the API call.
  responses = []
  urls = ["http://www.seomoz.org/blog/21-tactics-to-increase-blog-traffic", "http://www.seomoz.org/tools"]
  urls.each do |url|
    responses << UrlMetric.find(url)
  end